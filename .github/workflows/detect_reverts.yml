name: Detect Reverts and Amend Commit Message
on: [push]
jobs:
  detect_reverts:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Fetch all history for all branches and tags
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install Git
      run: sudo apt-get install git
    - name: Run detect_reverts.py
      id: detect_reverts
      run: |
        OLD_COMMIT_HASH=$(git rev-parse HEAD~1)
        NEW_COMMIT_HASH=$(git rev-parse HEAD)
        REVERT_COMMIT=$(python scripts/detect_reverts.py)
        echo "::set-output name=revert_commit::$REVERT_COMMIT"
      env:
        OLD_COMMIT_HASH: ${{ github.event.before }}
        NEW_COMMIT_HASH: ${{ github.sha }}
    - name: Configure Git user
      if: steps.detect_reverts.outputs.revert_commit != ''
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
    - name: Get branch name
      id: get_branch
      run: echo "::set-output name=branch::$(git rev-parse --abbrev-ref HEAD)"

    - name: Amend commit message
      if: steps.detect_reverts.outputs.revert_commit != ''
      run: |
        REVERT_COMMIT=$(echo "${{ steps.detect_reverts.outputs.revert_commit }}" | sed 's/Revert commit detected: //')
        BRANCH_NAME=${{ steps.get_branch.outputs.branch }}
        echo "Revert commit detected: $REVERT_COMMIT"
        git checkout $BRANCH_NAME
        # Ensure the command is correctly formatted and executed
        GIT_SEQUENCE_EDITOR="sed -i 's/pick $REVERT_COMMIT/edit $REVERT_COMMIT/'" git rebase -i --root
        git commit --amend -m "Revert $(git log -1 --pretty=%B --skip 1)"
        git rebase --continue
        
    - name: Push changes
      if: steps.detect_reverts.outputs.revert_commit != ''
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        BRANCH_NAME=${{ steps.get_branch.outputs.branch }}
        git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git
        git push origin HEAD:$BRANCH_NAME --force